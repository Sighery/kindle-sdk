name: Build

on:
  push:
    tags:
      - "build-*"

permissions:
  contents: write

env:
  # TODO: Need to figure out a way to autoupdate
  KOX_RELEASE: "https://github.com/koreader/koxtoolchain/releases/download/2025.05/"
  KOX_RELEASE_URL: "https://github.com/koreader/koxtoolchain/releases/tag/2025.05"

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        build:
          - device: "scribe1"
            version: "5.17.3"
          - device: "kindlepw5"
            version: "5.16.2.1.1"

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: "recursive"

      - name: Setup env variables
        run: |
          source helpers.sh
          toolchain=$(Kindle_Toolchain ${{ matrix.build.device }} ${{ matrix.build.version }})
          platform=$(Kindle_Platform ${{ matrix.build.device }} ${{ matrix.build.version }})
          firmware_url=$(Kindle_Firmware_URL ${{ matrix.build.device }} ${{ matrix.build.version }})

          echo "KSDK_TOOLCHAIN=$toolchain" >> "$GITHUB_ENV"
          echo "KSDK_PLATFORM=$platform" >> "$GITHUB_ENV"
          echo "KSDK_FIRMWARE_URL=$firmware_url" >> "$GITHUB_ENV"

          git fetch origin +${{ github.ref }}:${{ github.ref }}
          subject=$(git tag -l --format='%(contents:subject)' ${{ github.ref_name }})
          echo "TAG_SUBJECT=$subject" >> "$GITHUB_ENV"

      - name: Setup Koxtoolchain
        run: |
          wget -nv "${KOX_RELEASE}$KSDK_PLATFORM.tar.gz"
          tar -xzf "$KSDK_PLATFORM.tar.gz" -C .

      - name: Setup Kindle SDK
        run: |
          sudo apt-get -qq update -y
          sudo apt-get -qq install -y libarchive-dev nettle-dev unzip

          sudo ./gen-sdk.sh expert $KSDK_TOOLCHAIN $KSDK_PLATFORM $KSDK_FIRMWARE_URL "./x-tools/$KSDK_TOOLCHAIN"

          sudo chown -R $USER ./x-tools

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: "${{ matrix.build.device }}-${{ matrix.build.version }}"
          path: "./x-tools/${{ env.KSDK_TOOLCHAIN }}"

      - name: Tar SDK
        run: tar -czf "${{ matrix.build.device }}-${{ matrix.build.version }}.tar.gz" "./x-tools/$KSDK_TOOLCHAIN"

      - name: Create draft release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          name: ${{ env.TAG_SUBJECT }}
          body: |
            Built with Koxtoolchain release ${{ env.KOX_RELEASE_URL }}
          files: "${{ matrix.build.device }}-${{ matrix.build.version }}.tar.gz"

  publish-release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Publish release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          make_latest: true
